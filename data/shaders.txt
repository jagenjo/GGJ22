\shaders
card basic.vs card.fs

\basic.vs

precision highp float;
attribute vec3 a_vertex;
attribute vec3 a_normal;
attribute vec2 a_coord;
varying vec3 v_pos;
varying vec3 v_normal;
varying vec2 v_coord;
#ifdef INSTANCED
	attribute mat4 u_model;
#else
	uniform mat4 u_model;
#endif
uniform mat4 u_viewprojection;

void main() {
	v_pos = (u_model * vec4(a_vertex,1.0)).xyz;
	v_normal = (u_model * vec4(a_normal,0.0)).xyz;
	v_coord	= a_coord;
	gl_Position = u_viewprojection * vec4(v_pos,1.0);
}


\card.fs

precision highp float;
varying vec2 v_coord;
varying vec3 v_pos;
uniform mat4 u_vp;
uniform vec4 u_color;
uniform mat4 u_model;
uniform sampler2D u_texture;

void main() {
	vec4 color = u_color * texture2D( u_texture, v_coord );
	if(color.a == 0.0)
		discard;
	gl_FragColor = color;
}

